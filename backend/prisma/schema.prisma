// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    Int     @id @default(autoincrement())
  email String  @unique
  name  String?
}

model Candidate {
  id          String       @id @default(uuid())
  firstName   String
  lastName    String
  email       String       @unique
  address     String?
  available   Boolean      @default(true)
  resumeUrl   String?
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  education   Education[]
  experience  Experience[]

  @@map("candidates")
}

model Education {
  id          String    @id @default(uuid())
  institution String
  title       String
  degree      String
  years       Int?
  candidateId String
  candidate   Candidate @relation(fields: [candidateId], references: [id], onDelete: Cascade)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@map("education")
}

model Experience {
  id          String    @id @default(uuid())
  role        String
  company     String
  industry    String
  startDate   DateTime
  endDate     DateTime?
  candidateId String
  candidate   Candidate @relation(fields: [candidateId], references: [id], onDelete: Cascade)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@map("experience")
}